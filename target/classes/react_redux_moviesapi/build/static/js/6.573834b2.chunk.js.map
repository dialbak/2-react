{"version":3,"sources":["store/movies/movies.selectors.js","store/favoris/favoris.selectors.js","store/selectors.js","features/films/components/movie-details/MovieDetails.js","features/films/components/movie-list/MovieElement/MovieElement.js","features/films/components/movie-list/MovieList.js","features/films/components/search-bar/SearchBar.js","features/films/index.js"],"names":["moviesSelector","state","movies","moviesIsLoadingSelector","createSelector","isLoading","moviesListSelector","data","moviesSelectedMovieIndexSelector","selectedMovie","moviesSelectedMovieSelector","moviesData","index","favorisSelector","favoris","favorisListSelector","favorisIsLoadingSelector","favorisListNameSelector","favorisData","map","f","title","MovieDetails","Component","render","className","this","props","movie","alt","src","img","details","description","MovieElement","mouseEnter","updateSelectedMovie","Container","onClick","width","isFavori","removeFavori","addFavori","styled","div","MovieList","m","key","includes","SearchBar","submit","values","actions","fetchMovies","then","setSubmitting","onSubmit","initialValues","query","language","handleSubmit","handleChange","handleBlur","isSubmitting","name","placeholder","onChange","onBlur","value","type","disabled","connect","favorisListName","setSelectedMovie","tryRemoveFavori","tryAddFavori","length","Loading"],"mappings":"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","file":"static/js/6.573834b2.chunk.js","sourcesContent":["import { createSelector } from 'reselect';\n\nexport const moviesSelector = state => state.movies;\n\nexport const moviesIsLoadingSelector = createSelector(\n  [moviesSelector],\n  movies => movies.isLoading\n);\n\nexport const moviesListSelector = createSelector(\n  [moviesSelector],\n  movies => movies.data\n);\n\nexport const moviesSelectedMovieIndexSelector = createSelector(\n  [moviesSelector],\n  movies => movies.selectedMovie\n);\n\nexport const moviesSelectedMovieSelector = createSelector(\n  [moviesListSelector, moviesSelectedMovieIndexSelector],\n  (moviesData, index) => moviesData[index]\n);\n\n","import { createSelector } from 'reselect';\n\n/**\n * Les selectors permettent de prendre des données dans le state\n * de faire des calculs dessus par exemple et de les mettre en mémoire du cash\n * \"mémoĩsation\"\n */\nexport const favorisSelector = state => state.favoris;\n\nexport const favorisListSelector = createSelector(\n  [favorisSelector],\n  favoris => favoris.data\n);\n\nexport const favorisIsLoadingSelector = createSelector(\n  [favorisSelector],\n  favoris => favoris.isLoading\n);\n\nexport const favorisListNameSelector = createSelector(\n  [favorisListSelector],\n  favorisData => favorisData.map( f => f.title )\n);\n","export * from './movies/movies.selectors';\nexport * from './favoris/favoris.selectors';","import React, { Component } from 'react';\n\nexport default class MovieDetails extends Component {\n\n  render() {\n    return (\n      <div className=\"w-25 bg-light p-4 d-flex flex-column\">\n        { this.props.movie ? (\n          <>\n            <h5>{ this.props.movie.title }</h5>\n            <hr className=\"w-100\"/>\n            <div>\n              <img alt=\"movie\" className=\"mx-auto d-block w-100\" src={ this.props.movie.img } />\n            </div>\n            <hr className=\"w-100\"/>\n            <p className=\"text-secondary\">{ this.props.movie.details }</p>\n            <p>{ this.props.movie.description }</p>\n          </>\n        ) : null }\n     </div>\n\n    );\n  }\n\n}","import React, {Component} from 'react';\nimport styled from \"styled-components\"\n\nexport default class MovieElement extends Component {\n\n\n    mouseEnter = () => {\n        this.props.updateSelectedMovie(this.props.movie.title);\n    }\n\n    render() {\n        return (\n            <Container onClick={this.mouseEnter} className={\"d-flex flex-row bg-light \"}>\n                <img alt=\"film\" width=\"185\" src={this.props.movie.img}/>\n                <div className=\"flex-fill d-flex flex-column p-3\">\n                    <h5>{this.props.movie.title}</h5>\n                    <hr className=\"w-100\"/>\n                    <p className=\"flex-fill\">{this.props.movie.details}</p>\n                    <div className=\"d-flex flex-row justify-content-end\">\n                        {this.props.isFavori ? (\n                            <button onClick={() => {\n                                this.props.removeFavori(this.props.movie.title)\n                            }} className=\"btn btn-small btn-danger\">Retirer</button>\n                        ) : (\n                            <button onClick={() => {\n                                this.props.addFavori(this.props.movie)\n                            }} className=\"btn btn-small btn-primary\">Ajouter</button>\n                        )}\n                    </div>\n                </div>\n            </Container>\n        );\n    }\n}\n\nconst Container = styled.div`\n  width: 480px;\n  height: 280px;\n  overflow: hidden;\n  margin: 0px 5px 10px 5px;\n  cursor: pointer;\n\n  &:hover {\n    transform: scale(1.05);\n    transition: all 0.3s;\n  }`","import React, { Component } from 'react';\nimport MovieElement from './MovieElement/MovieElement';\n\nexport default class MovieList extends Component {\n  render() {\n    return (\n      <div className=\"w-75 d-flex flex-row flex-wrap justify-content-center\">\n        { this.props.movies.map( (m, index) => (\n          <MovieElement \n            key={ m.title + index } \n            movie={ m } \n            isFavori={ this.props.favoris.includes(m.title) }\n            addFavori={ this.props.addFavori }\n            removeFavori={ this.props.removeFavori }\n            updateSelectedMovie={ () => { this.props.updateSelectedMovie(index) } } \n          />\n        ))}\n      </div>\n    );\n  }\n\n}","import React, { Component } from 'react';\nimport { Formik } from 'formik';\n\nexport default class SearchBar extends Component {\n  \n  submit = (values, actions) => {\n    this.props.fetchMovies(values).then( () => actions.setSubmitting(false));        \n  }\n  \n  render() {\n    return (\n      <Formik\n        onSubmit={ this.submit }\n        initialValues={ { query: '', language: 'en-US' } }\n      >\n        { ({ handleSubmit, handleChange, handleBlur, isSubmitting }) => (\n          <form className=\"d-flex flex-row p-2 m-2\" onSubmit={ handleSubmit }>\n            <input name=\"query\" className=\"flex-fill form-control mr-2\" placeholder=\"Search ...\" onChange={ handleChange } onBlur={ handleBlur } />\n            <select className=\"mr-2 form-control w-25\" name=\"language\"  onChange={ handleChange } onBlur={ handleBlur }>\n              <option value=\"en-US\"> Anglais </option>\n              <option value=\"fr-FR\"> Francais </option>\n            </select>\n            <button className=\"btn btn-small btn-success\" type=\"submit\" disabled={ isSubmitting } >Submit</button>\n          </form>\n        )}\n\n      </Formik>\n    )\n  }\n}","import React from 'react';\nimport {MovieDetails, MovieList, SearchBar} from './components';\nimport Loading from '../../components/utils/Loading';\nimport {connect} from 'react-redux';\nimport {\n    favorisListNameSelector,\n    moviesIsLoadingSelector,\n    moviesListSelector,\n    moviesSelectedMovieSelector\n} from '../../store/selectors';\n\nimport {fetchMovies, setSelectedMovie, tryAddFavori, tryRemoveFavori} from '../../store/actions';\n\nconst Films = (props) => {\n    return (\n        <>\n            <SearchBar fetchMovies={props.fetchMovies}/>\n            {props.movies.length <= 0 && <div className={\"text-center\"}>Veuillez chercher un film pour afficher une liste</div>}\n            {props.isLoading ? (\n                <Loading/>\n            ) : (\n                <div className=\"d-flex flex-row flex-fill pt-4 p-2\">\n                    <MovieList\n                        movies={props.movies}\n                        updateSelectedMovie={props.setSelectedMovie}\n                        favoris={props.favorisListName}\n                        removeFavori={props.tryRemoveFavori}\n                        addFavori={props.tryAddFavori}\n                    />\n                    <MovieDetails\n                        movie={props.selectedMovie}\n                    />\n                </div>\n            )}\n        </>\n    )\n}\n\nexport default connect(state => ({\n    isLoading: moviesIsLoadingSelector(state),\n    movies: moviesListSelector(state),\n    favorisListName: favorisListNameSelector(state),\n    selectedMovie: moviesSelectedMovieSelector(state)\n}), {\n    fetchMovies,\n    setSelectedMovie,\n    tryRemoveFavori,\n    tryAddFavori\n})(Films);\n"],"sourceRoot":""}