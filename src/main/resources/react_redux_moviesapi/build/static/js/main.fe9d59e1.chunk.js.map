{"version":3,"sources":["conf/api.movie.js","store/movies/movies.actions.js","conf/log.js","components/utils/Loading.js","store/actions.js","components/header/Header.js","App.js","store/reducers.js","store/movies/movies.reducers.js","store/favoris/favoris.reducers.js","store/index.js","index.js","conf/api.firebase.js","store/favoris/favoris.actions.js"],"names":["apiMovie","axios","interceptors","request","use","req","headers","log","apiKey","apiMovieMap","m","img","poster_path","title","details","release_date","vote_average","vote_count","description","overview","filter","query","Object","keys","map","k","join","get","then","response","data","results","moviesApi","REQUEST_MOVIES","FETCH_MOVIES_SUCCESS","FETCH_MOVIES_ERROR","SET_SELECTED_MOVIE","fetchMovies","dispatch","type","apiMovieRequest","movies","fetchMoviesSuccess","error","fetchMoviesError","setSelectedMovie","index","apiUrl","databaseUrl","style","minHeight","className","alt","src","Header","Component","render","href","to","activeClassName","LazyFilms","Loadable","loader","loading","LazyFavoris","App","componentDidMount","this","props","fetchFavoris","path","component","withRouter","connect","state","isLoading","selectedMovie","action","actions","favoris","appReducer","combineReducers","reducers","middlewares","thunkMiddleware","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","document","getElementById","apiFirebase","baseURL","put","FETCH_FAVORIS_SUCCESS","FETCH_FAVORIS_ERROR","ADD_FAVORI_SUCCESS","ADD_FAVORI_ERROR","REMOVE_FAVORI_SUCCESS","REMOVE_FAVORI_ERROR","apiFirebaseRequest","fetchFavorisSuccess","fetchFavorisError","tryAddFavori","movie","getState","addFavoriSuccess","addFavoriError","tryRemoveFavori","findIndex","f","splice","removeFavoriSuccess","removeFavoriError"],"mappings":"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","file":"static/js/main.fe9d59e1.chunk.js","sourcesContent":["import * as axios from \"axios\";\nimport {log} from \"./log\"\n\nexport const apiMovie = axios.create();\n\napiMovie.interceptors.request.use(req => {\n  req.headers[\"Authorization\"] = `Bearer ${log.apiKey}`;\n    return req;\n});\n\nexport const apiMovieMap = m => ({\n  img: \"https://image.tmdb.org/t/p/w500\" + m.poster_path,\n  title: m.title,\n  details: `${m.release_date} | ${m.vote_average}/10 (${m.vote_count})`,\n  description: m.overview\n});\n\nexport default {\n  searchMovies: filter => {\n    const query =\n      \"?\" +\n      Object.keys(filter)\n        .map(k => `${k}=${filter[k]}&`)\n        .join(\"\");\n    return apiMovie\n      .get(\"/search/movie\" + query)\n      .then(response => response.data.results)\n      .then(moviesApi => moviesApi.map(apiMovieMap));\n  }\n};\n","import apiMovieRequest from '../../conf/api.movie';\n\nexport const REQUEST_MOVIES = 'request movies';\nexport const FETCH_MOVIES = 'fetch movies';\nexport const FETCH_MOVIES_SUCCESS = 'fetch movies success';\nexport const FETCH_MOVIES_ERROR = 'fetch movies error';\nexport const SET_SELECTED_MOVIE = 'set selected movies';\n\nexport const requestMovies = () => ({\n  type: REQUEST_MOVIES\n});\n\nexport const fetchMoviesSuccess = movies => ({\n  type: FETCH_MOVIES_SUCCESS,\n  movies\n});\n\nexport const fetchMoviesError = error => ({\n  type: FETCH_MOVIES_ERROR,\n  error\n});\n\nexport const fetchMovies = (filter) => dispatch => {\n  dispatch(requestMovies());\n  return apiMovieRequest.searchMovies(filter)\n      .then(\n    movies => dispatch(fetchMoviesSuccess(movies)),\n    error => dispatch(fetchMoviesError(error))\n  )\n};\n\nexport const setSelectedMovie = index => ({\n  type: SET_SELECTED_MOVIE,\n  index\n});\n\n","const apiKey = \"eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIxODQxN2IxYjA5MDFiMGMzYjhlYzQ4NmNhODQ1NjliZSIsInN1YiI6IjVjZDQzNTA4OTI1MTQxMDMyMzNiODA5NiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.jP-9oG4--p9q252sb-d61xXHIwdQZvs8aiEs67fHpTg\"\nconst apiUrl = \"https://api.themoviedb.org/4\";\nconst databaseUrl = \"https://films-5f1b9.firebaseio.com/\";\n\nexport const log = {apiUrl, apiKey, databaseUrl};\n","import React from 'react';\n\nexport default () => {\n  return (\n    <div style={ { minHeight: '100vh'} } className=\"d-flex flex-row justify-content-center align-items-center w-100\">\n      <img alt=\"loading gif\" src=\"https://i.redd.it/ounq1mw5kdxy.gif\" />\n    </div>\n  );\n}","export * from './movies/movies.actions';\nexport * from './favoris/favoris.actions';","import React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\nexport default class Header extends Component {\n\n  render() {\n    return (\n      <header className=\"navbar navbar-expand-lg navbar-light bg-light\">\n        <a className=\"navbar-brand\" href=\"/\">AlloMovie</a>\n        <button className=\"navbar-toggler\">\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n        <div className=\"collapse navbar-collapse\">\n          <ul className=\"navbar-nav ml-auto\">\n            <li className=\"nav-item\">\n              <NavLink to=\"/films\" className=\"nav-link\" activeClassName=\"active\" > Home </NavLink>\n            </li>\n            <li className=\"nav-item\">\n              <NavLink to=\"/favoris\" className=\"nav-link\" activeClassName=\"active\"> Favoris </NavLink>\n            </li>\n          </ul>\n        </div>\n      </header>\n    );\n  }\n\n}","import React, { Component } from \"react\";\nimport { Header } from \"./components\";\nimport { Route, Switch, Redirect, withRouter } from \"react-router-dom\";\nimport Loadable from \"react-loadable\";\nimport { connect } from \"react-redux\";\nimport { fetchFavoris } from \"./store/actions\";\n\nconst LazyFilms = Loadable({\n  loader: () => import(\"./features/films\"),\n  loading: () => <h1>Loading ...</h1>\n});\n\nconst LazyFavoris = Loadable({\n  loader: () => import(\"./features/favoris\"),\n  loading: () => <h1>Loading ...</h1>\n});\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.fetchFavoris();\n  }\n\n  render() {\n    return (\n      <div className=\"App d-flex flex-column\">\n        <Header />\n        <Switch>\n          <Route path=\"/films\" component={LazyFilms} />\n          <Route path=\"/favoris\" component={LazyFavoris} />\n          <Redirect to=\"/films\" />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(\n  connect(null, {\n    fetchFavoris\n  })(App)\n);\n","import movies from './movies/movies.reducers'; \nimport favoris from './favoris/favoris.reducers';\n\n/**\n * {\n  movies: {\n    data: [],\n    selectedMovie: 0,\n    isLoading: false,\n    error: null\n  },\n  favoris: {\n    data: [],\n    isLoading: false,\n    error: null\n  }\n}\n */\n\n\nexport default {\n  movies,\n  favoris\n}\n","import * as actions from './movies.actions';\n\n\nexport default (state = {\n  data: [],\n  isLoading: false,\n  error: null,\n  selectedMovie: 0\n}, action) => {\n  switch(action.type) {\n    case actions.REQUEST_MOVIES: {\n      return {\n        ...state,\n        isLoading: true\n      }\n    }\n    case actions.FETCH_MOVIES_SUCCESS: {\n      return {\n        ...state,\n        isLoading: false,\n        error: null,\n        data: [ ...action.movies ]\n      }\n    }\n    case actions.FETCH_MOVIES_ERROR: {\n      return {\n        ...state,\n        isLoading: false,\n        error: action.error\n      }\n    }\n    case actions.SET_SELECTED_MOVIE: {\n      return {\n        ...state,\n        selectedMovie: action.index\n      }\n    }\n    default: {\n      return state\n    }\n  }\n}\n","import * as actions from './favoris.actions';\n\nexport default (state = {\n  data: [],\n  isLoading: false,\n  error: null\n}, action) => {\n  switch(action.type) {\n    case actions.FETCH_FAVORIS_SUCCESS: {\n      return {\n        ...state,\n        data: action.favoris,\n        isLoading: false,\n        error: null\n      }\n    }\n    case actions.FETCH_FAVORIS_ERROR: {\n      return {\n        ...state,\n        isLoading: false,\n        error: action.error\n      }\n    }\n    case actions.REMOVE_FAVORI_SUCCESS:\n    case actions.ADD_FAVORI_SUCCESS: {\n      return {\n        ...state,\n        data: action.favoris,\n        error: null\n      }\n    }\n    case actions.REMOVE_FAVORI_ERROR:\n    case actions.ADD_FAVORI_ERROR: {\n      return {\n        ...state,\n        error: action.error\n      }\n    }\n    default: {\n      return state\n    }\n  }\n}\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport reducers from './reducers';\nimport logger from 'redux-logger';\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly';\nimport thunkMiddleware from 'redux-thunk';\n\nconst appReducer = combineReducers(reducers);\n\nconst middlewares = [thunkMiddleware];\n\nif (process.env.NODE_ENV === 'development') {\n  middlewares.push(logger);\n}\n\nexport const store = createStore(appReducer, composeWithDevTools(\n  applyMiddleware(...middlewares))\n);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './store';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n  <Provider store={ store }>\n    <Router>\n      <App />\n    </Router>\n  </Provider>\n, document.getElementById('root'));\n","import * as axios from 'axios';\nimport {log} from \"./log\"\n\nexport const apiFirebase = axios.create({\n  baseURL: `${log.databaseUrl}`\n});\n\nexport default {\n  fetchFavoris: () => apiFirebase.get('favoris.json').then( \n    response => response.data ? response.data : []\n  ),\n  saveFavoris: favoris => apiFirebase.put('favoris.json', favoris)\n}\n","import apiFirebaseRequest from '../../conf/api.firebase';\n\nexport const REQUEST_FAVORIS = 'request favoris';\nexport const FETCH_FAVORIS = 'fetch favoris';\nexport const FETCH_FAVORIS_SUCCESS = 'fetch favoris success';\nexport const FETCH_FAVORIS_ERROR = 'fetch favoris error';\n\nexport const TRY_ADD_FAVORI = 'try add favoris';\nexport const ADD_FAVORI_SUCCESS = 'add favoris success';\nexport const ADD_FAVORI_ERROR = 'add favoris error';\n\nexport const TRY_REMOVE_FAVORI = 'try remove favoris';\nexport const REMOVE_FAVORI_SUCCESS = 'remove favoris success';\nexport const REMOVE_FAVORI_ERROR = 'remove favoris error';\n\nexport const requestFavoris = () => ({\n  type: REQUEST_FAVORIS\n});\n\nexport const fetchFavorisSuccess = favoris => ({\n  type: FETCH_FAVORIS_SUCCESS,\n  favoris\n});\n\nexport const fetchFavorisError = error => ({\n  type: FETCH_FAVORIS_ERROR,\n  error\n});\n\nexport const fetchFavoris = () => dispatch => {\n  dispatch(requestFavoris());\n  return apiFirebaseRequest.fetchFavoris().then( \n    favoris => dispatch(fetchFavorisSuccess(favoris)),\n    error => dispatch(fetchFavorisError(error))\n  )\n}\n\nexport const addFavoriSuccess = favoris => ({\n  type: ADD_FAVORI_SUCCESS,\n  favoris\n})\n\nexport const addFavoriError = error => ({\n  type: ADD_FAVORI_ERROR,\n  error\n})\n\nexport const tryAddFavori = movie => (dispatch, getState) => {\n  const favoris = [ ...getState().favoris.data, movie];\n  return apiFirebaseRequest.saveFavoris(favoris).then(\n    () => dispatch(addFavoriSuccess(favoris)),\n    error => dispatch(addFavoriError(error))\n  )\n}\n\nexport const removeFavoriSuccess = favoris => ({\n  type: REMOVE_FAVORI_SUCCESS,\n  favoris\n})\n\nexport const removeFavoriError = error => ({\n  type: REMOVE_FAVORI_ERROR,\n  error\n})\n\nexport const tryRemoveFavori = title => (dispatch, getState) => {\n  const favoris = [ ...getState().favoris.data ];\n  const index = favoris.findIndex( f => f.title === title );\n  favoris.splice(index, 1);\n  return apiFirebaseRequest.saveFavoris(favoris).then(\n    () => dispatch(removeFavoriSuccess(favoris)),\n    error => dispatch(removeFavoriError(error))\n  )\n}"],"sourceRoot":""}